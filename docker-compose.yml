---

# Commands
# docker compose up -d # To download all the containers
#   and start them running in the background.
# docker compose ps # To see which containers are running.
# docker compose ps -a # To see all containers, running or not
# docker compose down # To stop all of the containers.
#   The up, stop, and rm commands can take services as arguments.
#   That means you can start and stop individual containers,
#   and delete them.
#   For example:
#   docker compose up -d arch_amd64
#   docker compose stop arch_amd64
#   docker compose rm arch_amd64
# docker attach  --detach-keys="ctrl-a,x" <name> # To attach to an 
#   instance by name (from 'docker-compose ps'.) The detach keys 
#   allow you to detach without having the instance exit.
# Notes
# Hosts will be able to communicate with each other inside the 
#   docker network by hostname.
# The file supports both the amd64 and arm64 architecture versions of
# operating systems if they are available.

version: "3.8"

services:
  arch_amd64:
    # Source: https://wiki.archlinux.org/index.php/docker#Arch_Linux
    # There is no arm* image available, only amd64 architecture is supported
    platform: linux/amd64
    image: archlinux
    hostname: arch_amd64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

# CentOS does not have a supported Docker image. 
# Source: https://hub.docker.com/_/centos

  debian-11_amd64: # Bullseye
    # Source: https://hub.docker.com/_/debian/
    platform: linux/amd64
    image: debian:11
    hostname: debian-11_amd64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

  debian-11_arm64: # Bullseye
    # Source: https://hub.docker.com/r/arm64v8/debian/
    platform: linux/arm64/v8
    image: arm64v8/debian:11
    hostname: debian-11_arm64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

  debian-12_amd64: # Bookworm
    # Source: https://hub.docker.com/_/debian/
    platform: linux/amd64
    image: debian:12
    hostname: debian-12_amd64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

  debian-12_arm64: # Bookworm
    # Source:https://hub.docker.com/r/arm64v8/debian/
    platform: linux/arm64/v8
    image: arm64v8/debian:12
    hostname: debian-12_arm64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

  fedora-37_amd64:
    # Source: https://hub.docker.com/_/fedora/
    platform: linux/amd64
    image: fedora:37
    hostname: fedora-37_amd64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true
    # Workaround for Fedora issue
    entrypoint: /bin/bash

  fedora-37_arm64:
    # Source: https://hub.docker.com/_/fedora/
    platform: linux/arm64/v8
    image: arm64v8/fedora:37
    hostname: fedora-37_arm64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true
    # Workaround for Fedora issue
    entrypoint: /bin/bash

  fedora-38_amd64:
    # Source: https://hub.docker.com/_/fedora/
    platform: linux/amd64
    image: fedora:38
    hostname: fedora-38_amd64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true
    # Workaround for Fedora issue
    #entrypoint: /bin/bash

  fedora-38_arm64:
    # Source: https://hub.docker.com/_/fedora/
    platform: linux/arm64/v8
    image: arm64v8/fedora:38
    hostname: fedora-38_arm64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true
    # Workaround for Fedora issue
    #entrypoint: /bin/bash

  kali_amd64:
    # https://www.kali.org/docs/containers/official-kalilinux-docker-images/
    platform: linux/amd64
    image: kalilinux/kali-rolling
    hostname: kali_amd64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

  kali_arm64:
    # https://www.kali.org/docs/containers/official-kalilinux-docker-images/
    platform: linux/arm64/v8
    image: kalilinux/kali-rolling:arm64
    hostname: kali_arm64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

  rocky-8_amd64: # Green Obsidian
    # Source: https://hub.docker.com/_/rockylinux
    platform: linux/amd64
    image: rockylinux:8
    hostname: rocky-8_amd64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

  rocky-8_arm64: # Green Obsidian
    # Source: https://hub.docker.com/_/rockylinux
    platform: linux/arm64/v8
    image: arm64v8/rockylinux:8
    hostname: rocky-8_arm64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

  rocky-9_amd64: # Blue Onyx
    # Source: https://hub.docker.com/_/rockylinux
    platform: linux/amd64
    image: rockylinux:9
    hostname: rocky-9_amd64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

  rocky-9_arm64: # Blue Onyx
    # Source: https://hub.docker.com/_/rockylinux
    platform: linux/arm64/v8
    image: arm64v8/rockylinux:9
    hostname: rocky-9_arm64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

  ubuntu-2004_amd64: # Focal Fossa
    # Source: https://hub.docker.com/_/ubuntu/
    platform: linux/amd64
    image: ubuntu:20.04
    hostname: ubuntu-2004_amd64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

  ubuntu-2004_arm64: # Focal Fossa
    # Source: https://hub.docker.com/_/ubuntu/
    platform: linux/arm64/v8
    image: arm64v8/ubuntu:20.04
    hostname: ubuntu-2004_arm64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

  ubuntu-2204_amd64: # Jammy Jellyfish
    # Source: https://hub.docker.com/_/ubuntu/
    platform: linux/amd64
    image: ubuntu:22.04
    hostname: ubuntu-2204_amd64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true

  ubuntu-2204_arm64: # Jammy Jellyfish
    # Source: https://hub.docker.com/_/ubuntu/
    platform: linux/arm64/v8
    image: arm64v8/ubuntu:22.04
    hostname: ubuntu-2204_arm64
    # Run a shell that can be connected to
    stdin_open: true
    tty: true